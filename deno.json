{
  "lock": false,
  "lockfile": "deno.lock",
  "tasks": {
    "check": "deno fmt --check && deno lint && deno check **/*.ts && deno check **/*.tsx",
    "start": "deno task check_version && deno run -A main.ts",
    "dev": "DENO_ENV=development && deno run --inspect --allow-all --watch --watch-exclude=dist/,node_modules/,_fresh/,.git/,coverage/,tmp/,tests/ --no-clear-screen dev.ts --host",
    "build": "deno run -A main.ts build",
    "dev:build": "deno task build && deno task dev",
    "docs": "deno run --allow-read --allow-write swagger.js",
    "fakebuild": "echo 'fake build'",
    "preview": "deno run -A main.ts",
    "update": "deno run -A -r https://fresh.deno.dev/update .",
    "decode": "deno run -A utils/decodeSrc20MsigTx.ts",
    "decode_olga": "deno run -A utils/decodeSrc20OlgaTx.ts",
    "check_version": "deno run --allow-run --allow-env utils/check_deno_version.ts",
    "cleanup": "deno run --allow-run scripts/cleanup.ts",
    "dev:safe": "deno task cleanup && deno task dev",
    "validate:schema": "npx @redocly/cli lint --config .redocly.yaml --format stylish ./schema.yml",
    "dredd": "deno task validate:schema && npx dredd",
    "test:version": "deno test -A --log-level=debug --no-check tests/versioning/versionChain.test.ts"
  },
  "lint": {
    "rules": {
      "tags": ["fresh", "recommended"],
      "include": ["ban-untagged-todo"],
      "exclude": ["no-explicit-any"]
    }
  },
  "exclude": ["**/_fresh/*", "**/server/**/*"],
  "nodeModulesDir": "auto",
  "imports": {
    "@preact/signals": "https://esm.sh/*@preact/signals@1.2.2",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.5.1",
    "@std/assert": "jsr:/@std/assert@^1.0.9",
    "@std/async": "jsr:/@std/async@^1.0.5",
    "@std/crypto": "jsr:@std/crypto@^1.0.3",
    "@std/dotenv": "jsr:/@std/dotenv@^0.225.2",
    "@std/encoding": "jsr:/@std/encoding@^1.0.5",
    "@std/log": "jsr:/@std/log@0.224.0",
    "@std/path": "jsr:/@std/path@^0.219.1",
    "@std/testing": "jsr:/@std/testing@^1.0.6",
    "@std/yaml": "jsr:/@std/yaml@^0.219.1",

    "axiod": "https://deno.land/x/axiod@0.26.2/mod.ts",
    "bitcoinjs-lib": "npm:bitcoinjs-lib@7.0.0-rc.0",
    "big": "https://esm.sh/big.js@6.2.1",
    "bigfloat/": "https://deno.land/x/bigfloat@v3.0.2/",
    "compress": "https://deno.land/x/foras@v2.1.4/src/deno/mod.ts",
    "dayjs": "https://esm.sh/dayjs@1.11.10",
    "dayjs/": "https://esm.sh/dayjs@1.11.10/",
    "djwt/": "https://deno.land/x/djwt@v3.0.2/",
    "$fresh/": "https://deno.land/x/fresh@1.7.3/",
    "fresh_charts/": "https://deno.land/x/fresh_charts@0.3.1/",
    "fresh/tests/": "https://deno.land/x/fresh@1.7.6/tests/",
    "msgpack": "https://deno.land/x/msgpack@v1.4/mod.ts",
    "$mysql/": "https://deno.land/x/mysql@v2.12.1/",
    "preact": "https://esm.sh/preact@10.19.3",
    "preact/": "https://esm.sh/preact@10.19.3/",
    "qrcode": "https://esm.sh/qrcode@1.5.1",
    "redis": "https://deno.land/x/redis@v0.32.4/mod.ts",
    "swiper/": "https://esm.sh/swiper@11.1.14/",
    "swiper": "https://esm.sh/swiper@11.1.14",
    "tailwindcss": "npm:tailwindcss@3.4.1",
    "tailwindcss/": "npm:tailwindcss@3.4.1/",
    "tailwindcss/plugin": "npm:tailwindcss@3.4.1/plugin.js",
    "tiny-secp256k1": "npm:tiny-secp256k1@2.2.3",

    "$constants": "./lib/utils/constants.ts",
    "globals": "./globals.d.ts",
    "$/": "./",
    "$lib/": "./lib/",
    "$islands/": "./islands/",
    "$components/": "./components/",
    "$routes/": "./routes/",
    "$handlers/": "./routes/handlers/",
    "$server/": "./server/",
    "$client/": "./client/",
    "$types/": "./lib/types/"
  },
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact",
    "strict": true,
    "types": ["npm:@types/node"],
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "exactOptionalPropertyTypes": true,
    "noFallthroughCasesInSwitch": true
  },
  "fmt": {
    "files": {
      "include": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json"]
    },
    "options": {
      "useTabs": false,
      "lineWidth": 80,
      "indentWidth": 2,
      "singleQuote": false,
      "proseWrap": "preserve"
    }
  }
}
