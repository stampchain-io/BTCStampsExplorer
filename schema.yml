openapi: 3.0.3
info:
  title: Stampchain - OpenAPI 3.0
  description: Stampchain API UI
  version: 2.0.0
  contact:
    name: Stampchain Support
    url: https://stampchain.io
    email: support@stampchain.io
tags:
  - name: System
    description: System-level endpoints for health and version checks
  - name: Documentation
    description: API documentation endpoints
  - name: Balance
    description: Balance-related endpoints
  - name: Blocks
    description: Block-related endpoints
  - name: Collections
    description: Collection management endpoints
  - name: Cursed Stamps
    description: Endpoints for managing cursed stamps
  - name: SRC-20
    description: SRC-20 token related endpoints
  - name: SRC-101
    description: SRC-101 token related endpoints
  - name: Stamps
    description: Stamp management endpoints
  - name: Dispensers
    description: Dispenser management endpoints
  - name: Minting
    description: Token and stamp minting endpoints
externalDocs:
  description: Find out more about Stampchain
  url: "http://stampchain.io"
servers:
  - url: "https://stampchain.io"
    description: Production server (uses live data)
  - url: "https://bitcoinstamps.xyz"
    description: Production server (uses live data)
  - url: "http://localhost:8000"
paths:
  /api/v2/health:
    get:
      operationId: getHealthStatus
      tags:
        - System
      summary: Health check endpoint
      description: Checks if the API service is running and responding correctly. Returns a status indicating the health of the service.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ["OK"]
                required:
                  - status

  /api/v2/docs:
    get:
      operationId: getApiDocs
      tags:
        - Documentation
      summary: API documentation
      description: Returns the complete API documentation including all available endpoints, schemas, and examples.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIDocs"

  /api/v2/version:
    get:
      operationId: getApiVersion
      tags:
        - System
      summary: Get API version
      description: Returns the current version of the API being used. Useful for tracking API compatibility.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string

  /api/v2/error:
    get:
      operationId: testErrorResponse
      tags:
        - System
      summary: Test error endpoint
      description: Test endpoint that always returns an error response. Used for testing error handling and responses.
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/balance/{address}:
    get:
      operationId: getAddressBalance
      tags:
        - Balance
      summary: Get balance by address
      description: Retrieves the complete balance information for a given Bitcoin address, including stamps and SRC-20 tokens.
      parameters:
        - in: path
          name: address
          required: true
          example: "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"
          schema:
            type: string
          description: The address of the wallet
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBalanceResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/block/{block_index}:
    get:
      operationId: getBlockInfo
      tags:
        - Blocks
      summary: Get block info by block index or block hash
      description: Retrieves detailed information about a specific block, including transactions, stamps, and other block-related data.
      parameters:
        - in: path
          name: block_index
          required: true
          example: "844755"
          schema:
            type: string
          description: The block index or block hash
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockInfoResponseBody"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/block/block_count/{number}:
    get:
      operationId: getLastBlocks
      tags:
        - Blocks
      summary: Get last x blocks
      description: Returns information about the most recent blocks, with the number of blocks specified in the request.
      parameters:
        - in: path
          name: number
          required: true
          example: 2
          schema:
            type: integer
          description: The number of last blocks to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlockRow"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/collections:
    get:
      operationId: getCollections
      tags:
        - Collections
      summary: Get paginated collections
      description: Retrieves a paginated list of stamp collections. Can be filtered by creator address and includes collection metadata.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: "The maximum number of collections to retrieve (default: 50)"
        - in: query
          name: page
          schema:
            type: integer
          description: "The page number of the results (default: 1)"
        - in: query
          name: creator
          schema:
            type: string
          description: "Filter collections by creator address"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCollectionResponseBody"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/cursed:
    get:
      operationId: getCursedStamps
      tags:
        - Cursed Stamps
      summary: Get paginated cursed stamps
      description: Retrieves a paginated list of cursed stamps. Cursed stamps are stamps with negative stamp numbers that have been identified as invalid or problematic.
      parameters:
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
          description: "The maximum number of stamps to retrieve (default: 50)"
        - in: query
          name: page
          schema:
            type: integer
          description: "The page number of the results (default: 0)"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedStampResponseBody"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/cursed/{id}:
    get:
      operationId: getCursedStampById
      tags:
        - Cursed Stamps
      summary: Get stamp by ID {tx_hash, stamp, cpid}
      description: |
        Retrieves a specific cursed stamp by its identifier. Cursed stamps simply have a negative stamp number. 
        This endpoint is equivalent to /api/v2/stamps/{id} but specifically for cursed stamps.
      parameters:
        - in: path
          name: id
          required: true
          example: "-2"
          schema:
            type: string
          description: Stamp number, cpid, or stamp_hash
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/cursed/block/{block_index}:
    get:
      operationId: getCursedStampsByBlock
      tags:
        - Cursed Stamps
      summary: Get cursed stamps by block index
      description: Retrieves all cursed stamps that were created or identified in a specific block.
      parameters:
        - in: path
          name: block_index
          required: true
          example: 781141
          schema:
            type: integer
          description: The block index
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampBlockResponseBody"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20:
    get:
      operationId: getSrc20Transactions
      tags:
        - SRC-20
      summary: Get paginated valid SRC-20 transactions
      description: Retrieves a paginated list of valid SRC-20 transactions with optional limit and page parameters.
      parameters:
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 50
          description: The maximum number of transactions to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
      responses:
        "200":
          description: Successful response with paginated SRC-20 transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc20ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/balance/{address}:
    get:
      operationId: getSrc20AddressBalance
      tags:
        - SRC-20
      summary: Get SRC-20 balances by BTC wallet address
      description: Retrieves all SRC-20 token balances for a specific Bitcoin address.
      parameters:
        - in: path
          name: address
          required: true
          example: "1GotRejB6XsGgMsM79TvcypeanDJRJbMtg"
          schema:
            type: string
          description: The address of the wallet
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 200
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc20BalanceResponseBody"
        "404":
          description: Address Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/balance/{address}/{tick}:
    get:
      operationId: getSrc20AddressTickBalance
      tags:
        - SRC-20
      summary: Get SRC-20 balance by address and tick
      description: Retrieves the balance of a specific SRC-20 token (identified by tick) for a given Bitcoin address.
      parameters:
        - in: path
          name: address
          required: true
          example: "bc1qx6tg7nls0u949wy8eudwcaw0rcq0vl7ehh6p9l"
          schema:
            type: string
          description: The address of the wallet
        - in: path
          name: tick
          required: true
          example: "STAMP"
          schema:
            type: string
          description: The tick value
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Src20BalanceResponseBody"
        "404":
          description: Address/Tick Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/balance/snapshot/{tick}:
    get:
      operationId: getSrc20TickSnapshot
      tags:
        - SRC-20
      summary: Get SRC-20 balance snapshot by tick
      description: |
        Retrieves a snapshot of all owners for the SRC-20 tick value based upon the current block height.
        This provides a complete overview of token distribution at the current point in time.
      parameters:
        - in: path
          name: tick
          required: true
          example: "KEVIN"
          schema:
            type: string
          description: The SRC20 tick value
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 200
          description: The maximum number of transactions to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Src20SnapshotResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/block/{block_index}:
    get:
      operationId: getSrc20BlockTransactions
      tags:
        - SRC-20
      summary: Get paginated valid SRC-20 transactions from a specific block
      description: Retrieves all SRC-20 transactions that occurred in a specific block. Results can be filtered and paginated.
      parameters:
        - in: path
          name: block_index
          required: true
          example: 844757
          schema:
            type: integer
          description: The index of the block
        - in: query
          name: op
          required: false
          schema:
            type: string
          description: The operation type, if applicable.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
            default: 1000
          description: The maximum number of items to return, default is 1000.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
          description: The page number for pagination, default is 1.
        - in: query
          name: sort
          required: false
          schema:
            type: string
            default: "ASC"
          description: The sorting order, can be 'ASC' or 'DESC', default is 'ASC'.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc20ResponseBody"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/block/{block_index}/{tick}:
    get:
      operationId: getSrc20BlockTickTransactions
      tags:
        - SRC-20
      summary: Fetches SRC20 transactions for a given block and tick
      description: Retrieves SRC20 transactions filtered by block index and tick value, with additional optional filtering and pagination parameters.
      parameters:
        - in: path
          name: block_index
          required: true
          example: 844757
          schema:
            type: integer
            format: int32
          description: The index of the block.
        - in: path
          name: tick
          required: true
          example: "STAMP"
          schema:
            type: string
          description: The tick value, possibly represented as an emoji.
        - in: query
          name: op
          required: false
          schema:
            type: string
            enum: [TRANSFER, MINT, DEPLOY]
          description: The operation type, if applicable.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1000
          description: The maximum number of items to return, default is 1000.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
          description: The page number for pagination, default is 1.
        - in: query
          name: sort
          required: false
          schema:
            type: string
            enum: [ASC, DESC]
            default: "ASC"
          description: The sorting order, can be 'ASC' or 'DESC', default is 'ASC'.
      responses:
        "200":
          description: Successful response with the list of valid SRC-20 transactions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc20ResponseBody"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/tick:
    get:
      operationId: getSrc20TickOperations
      tags:
        - SRC-20
      summary: Get paginated valid SRC-20 transactions by operation type
      description: Retrieve paginated valid SRC-20 transactions by operation type (DEPLOY, MINT, TRANSFER)
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            example: 2
            minimum: 1
            default: 50
          description: The maximum number of transactions to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
        - in: query
          name: op
          schema:
            type: string
            default: "DEPLOY"
            enum: [TRANSFER, MINT, DEPLOY]
          description: The operation type [TRANSFER, MINT, DEPLOY(DEFAULT)]
        - in: query
          name: sort
          schema:
            type: string
            default: "DESC"
            enum: [ASC, DESC]
          description: Sort order [ASC, DESC]
      responses:
        "200":
          description: Successful response with paginated SRC-20 transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc20ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/tick/{tick}:
    get:
      operationId: getSrc20TickData
      tags:
        - SRC-20
      summary: Get paginated tick data
      description: Retrieve paginated tick data for a specific tick
      parameters:
        - in: path
          name: tick
          required: true
          example: "KEVIN"
          description: Tick value
          schema:
            type: string
        - in: query
          name: limit
          description: "Number of records per page (default: 50)"
          schema:
            type: integer
        - in: query
          name: page
          description: "Page number (default: 1)"
          schema:
            type: integer
        - in: query
          name: op
          schema:
            type: string
            default: "DEPLOY"
            enum: [TRANSFER, MINT, DEPLOY]
          description: The operation type [TRANSFER, MINT, DEPLOY]
        - in: query
          name: sort
          schema:
            type: string
            default: "ASC"
            enum: [ASC, DESC]
          description: Sort order [ASC, DESC]
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedTickResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/tick/{tick}/deploy:
    get:
      operationId: getSrc20TickDeployInfo
      tags:
        - SRC-20
      summary: Get deployment details for a specific tick
      description: Retrieve deployment details for a specific tick in the tick API.
      parameters:
        - in: path
          name: tick
          required: true
          example: "KEVIN"
          description: The tick value.
          schema:
            type: string
      responses:
        "200":
          description: Successful response with deployment details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TickResponseBody"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"


  /api/v2/src20/tx/{tx_hash}:
    get:
      operationId: getSrc20TransactionInfo
      tags:
        - SRC-20
      summary: Get information about a specific transaction
      description: Retrieves detailed information about a specific SRC-20 transaction by its transaction hash.
      parameters:
        - in: path
          name: tx_hash
          required: true
          example: "9d5451a3ae07a6fe92907cef3c649f52544b8b4e67a6cae848b14e1d8047b5a4"
          schema:
            type: string
          description: The hash of the transaction.
      responses:
        "200":
          description: Successful response with transaction information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Src20ResponseBody"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101:
    get:
      operationId: getSrc101Transactions
      tags:
        - SRC-101
      summary: Get paginated valid SRC-101 transactions
      description: Retrieve paginated valid SRC-101 transactions with optional limit and page parameters
      parameters:
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 50
          description: The maximum number of transactions to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
      responses:
        "200":
          description: Successful response with paginated SRC-101 transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc101ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101/tx:
    get:
      operationId: getSrc101TransactionList
      tags:
        - SRC-101
      summary: Get paginated SRC-101 transactions
      description: Retrieve paginated SRC-101 transactions with optional filtering by block index, operation type, and validation status.
      parameters:
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 50
          description: The maximum number of transactions to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
        - in: query
          name: block_index
          schema:
            type: integer
          description: Filter transactions by block index
        - in: query
          name: op
          schema:
            type: string
            enum: [mint, transfer]
          description: Filter by operation type, either "mint" or "transfer"
        - in: query
          name: deploy_hash
          schema:
            type: string
          description: Filter by deployment transaction hash
        - in: query
          name: valid
          schema:
            type: integer
            enum: [0, 1]
          description: Filter by validation status (1 for valid, 0 for invalid)
      responses:
        "200":
          description: Successful response with paginated SRC-101 transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc101ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101/tx/{tx_hash}:
    get:
      operationId: getSrc101TransactionByHash
      tags:
        - SRC-101
      summary: Get SRC-101 transaction by hash
      description: Retrieve detailed information about a specific SRC-101 transaction using its transaction hash.
      parameters:
        - in: path
          name: tx_hash
          required: true
          example: "11e4b91d35040f3bc71c5c0f80be9f0ebc3c7073bdcee01651914062dde5733e"
          schema:
            type: string
          description: The hash of the transaction
      responses:
        "200":
          description: Successful response with transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc101ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101/{deploy_hash}/deploy:
    get:
      operationId: getSrc101DeployInfo
      tags:
        - SRC-101
      summary: Get SRC-101 deployment details
      description: Retrieve comprehensive deployment information for a specific SRC-101 token using its deployment transaction hash.
      parameters:
        - in: path
          name: deploy_hash
          required: true
          example: "8d40a2b97c0fa638fa18daf564f916260a22e7f2eca9a786763f2eeaab57541d"
          schema:
            type: string
          description: The hash of the deploy transaction
      responses:
        "200":
          description: Successful response with deployment details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc101ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101/{deploy_hash}/total:
    get:
      operationId: getSrc101TotalSupply
      tags:
        - SRC-101
      summary: Get total supply for SRC-101 token
      description: Retrieve the total supply and related statistics for a specific SRC-101 token using its deployment hash.
      parameters:
        - in: path
          name: deploy_hash
          required: true
          example: "8d40a2b97c0fa638fa18daf564f916260a22e7f2eca9a786763f2eeaab57541d"
          schema:
            type: string
          description: The hash of the deploy transaction
      responses:
        "200":
          description: Successful response with total supply information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TotalSrc101ResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"


  /api/v2/src101/{deploy_hash}/address/{address_btc}:
    get:
      operationId: getSrc101TokensByAddress
      tags:
        - SRC-101
      summary: Get tokenid of SRC-101 by address_btc
      description: Retrieve deployment details for a specific deploy_hash in the deploy_hash API.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            example: 2
            minimum: 1
            default: 50
          description: The maximum number of transactions to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of transactions to retrieve
        - in: query
          name: sort
          schema:
            type: string
            default: DESC
            enum: [ASC, DESC]
          description: Sort order [ASC, DESC]
        - in: query
          name: prim
          required: true
          example: "true"
          schema:
            type: string
        - in: path
          name: deploy_hash
          required: true
          example: "8d40a2b97c0fa638fa18daf564f916260a22e7f2eca9a786763f2eeaab57541d"
          description: The hash of the deploy transaction.
          schema:
            type: string
        - in: path
          name: address_btc
          required: true
          example: "miuyV1UoMA25QE8heKjWX8A7RtAn26tLYu"
          schema:
            type: string
      responses:
        '200':
          description: Successful response with deployment details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenidSrc101ResponseBody'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
  /api/v2/src101/balance/{address}:
    get:
      operationId: getSrc101AddressBalance
      tags:
        - SRC-101
      summary: Get SRC-101 balances by address
      description: Retrieve all SRC-101 token balances for a specific Bitcoin address, including details about each token held.
      parameters:
        - in: path
          name: address
          required: true
          example: "1GotRejB6XsGgMsM79TvcypeanDJRJbMtg"
          schema:
            type: string
          description: The Bitcoin address to query
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 200
          description: Number of records per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
      responses:
        "200":
          description: Successful response with address balances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSrc101BalanceResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101/{deploy_hash}/{tokenid}:
    get:
      operationId: getSrc101TokenInfo
      tags:
        - SRC-101
      summary: Get SRC-101 token information
      description: Retrieve detailed information about a specific SRC-101 token using its deployment hash and token identifier.
      parameters:
        - in: path
          name: deploy_hash
          required: true
          example: "9f4f8e7ba2eb8daf36f9d38b502315d23807aa7a55858acc1c73066b30506ab7"
          schema:
            type: string
          description: The deployment transaction hash
        - in: path
          name: tokenid
          required: true
          example: "c3VwZXJib3k="
          schema:
            type: string
          description: The unique token identifier
      responses:
        "200":
          description: Successful response with token information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Src101BalanceResponseBody"
        "404":
          description: Token not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src101/index/{deploy_hash}/{index}:
    get:
      operationId: getSrc101TokenByIndex
      tags:
        - SRC-101
      summary: Get SRC-101 token by index
      description: Retrieve token information using its deployment hash and numeric index. This endpoint provides an alternative way to access token data.
      parameters:
        - in: path
          name: deploy_hash
          required: true
          example: "9f4f8e7ba2eb8daf36f9d38b502315d23807aa7a55858acc1c73066b30506ab7"
          schema:
            type: string
          description: The deployment transaction hash
        - in: path
          name: index
          required: true
          example: 1
          schema:
            type: number
          description: The numeric index of the token
      responses:
        "200":
          description: Successful response with token information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Src101BalanceResponseBody"
        "404":
          description: Token not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps:
    get:
      operationId: getStamps
      tags:
        - Stamps
      summary: Get paginated stamps
      description: Retrieve a paginated list of stamps.
      parameters:
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
          description: The maximum number of stamps to return per page. Defaults to 50.
        - in: query
          name: page
          example: 1
          schema:
            type: integer
          description: The page number to retrieve. Defaults to 1.
        - in: query
          name: sort_order
          example: desc
          schema:
            type: string
          description: The order of stamps.
      responses:
        "200":
          description: Successful response with paginated stamps.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedStampResponseBody"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps/{id}:
    get:
      operationId: getStampById
      tags:
        - Stamps
      summary: Get stamp by ID
      description: Retrieve a specific stamp using its ID (tx_hash, stamp number, or cpid).
      parameters:
        - in: path
          name: id
          required: true
          example: "5faa1aa3012c89b598372153371f835a88739e5539c9c709924ce189fb9c7863"
          description: ID (tx_hash, stamp, cpid) of the stamp
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps/balance/{address}:
    get:
      operationId: getStampBalance
      tags:
        - Stamps
      summary: Get stamp balances by address
      description: Retrieve all stamp balances for a specific Bitcoin address.
      parameters:
        - in: path
          name: address
          required: true
          example: "1GotRejB6XsGgMsM79TvcypeanDJRJbMtg"
          description: The address to retrieve stamp balances for
          schema:
            type: string
        - in: query
          name: limit
          example: 2
          description: "The maximum number of stamp balances to retrieve. default: 50"
          schema:
            type: integer
        - in: query
          name: page
          description: "The page number of stamp balances to retrieve. default: 1"
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedStampBalanceResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps/block/{block_index}:
    get:
      operationId: getStampsByBlock
      tags:
        - Stamps
      summary: Get stamps by block index
      description: Retrieve all stamps that were created in a specific block.
      parameters:
        - in: path
          name: block_index
          required: true
          example: "779652"
          schema:
            type: string
          description: The index of the block
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampBlockResponseBody"
        "404":
          description: Block not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps/ident/{ident}:
    get:
      operationId: getStampsByIdent
      tags:
        - Stamps
      summary: Get stamps by ident
      description: Retrieve stamps based on their identifier type (SRC-721, STAMP).
      parameters:
        - in: path
          name: ident
          required: true
          example: "STAMP"
          description: The ident value (SRC-721, STAMP)
          schema:
            type: string
        - in: query
          name: limit
          example: 2
          description: "The maximum number of stamps to retrieve (default: 50)"
          schema:
            type: integer
        - in: query
          name: page
          description: "The page number of stamps to retrieve (default: 1)"
          schema:
            type: integer
      responses:
        "200":
          description: Successful response with the paginated stamps
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedIdResponseBody"
        "404":
          description: Stamps with the provided ident not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps/dispensers:
    get:
      operationId: getStampDispensers
      tags:
        - Stamps
        - Dispensers
      summary: Get all open dispensers
      description: Retrieve all open counterparty dispensers for stamps.
      parameters:
        - in: query
          name: limit
          example: 2
          schema:
            type: integer
            minimum: 1
            default: 50
          description: The maximum number of dispensers to retrieve per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number of dispensers to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedDispenserResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/stamps/dispensers/{id}:
    get:
      operationId: getStampDispenserById
      tags:
        - Stamps
        - Dispensers
      summary: Get open dispensers by stamp number, cpid, or stamp_hash
      description: Retrieve open dispensers for a specific stamp identified by its number, cpid, or stamp_hash.
      parameters:
        - in: path
          name: id
          required: true
          example: "A666240355190303432"
          description: Stamp number, cpid, or stamp_hash
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DispenserResponseBody"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/v2/src20/create:
    post:
      operationId: createSrc20Token
      tags:
        - SRC-20
      summary: Deploy, Mint, Transfer SRC-20 Tokens
      description: |
        This returns a hex encoded serialized PSBT transaction ready for signing and broadcasting
        via wallet or library.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SRC20DeployData'
                - $ref: '#/components/schemas/SRC20MintData'
                - $ref: '#/components/schemas/SRC20TransferData'
            examples:
              deploy:
                $ref: '#/components/examples/DeployExample'
              mint:
                $ref: '#/components/examples/MintExample'
              transfer:
                $ref: '#/components/examples/TransferExample'
      responses:
        "200":
          description: Successful response with the hex value.
          content:
            application/json:
              schema:
                type: object
                properties:
                  hex:
                    type: string
                    description: The hex encoded serialized psbt trx
                  base64:
                    type: string
                    description: The base64 encoded serialized psbt trx
                  input_value:
                    type: integer
                    description: The input value in sats
                  total_dust_value:
                    type: integer
                    description: The total dust value in sats
                  est_miner_fee:
                    type: integer
                    description: The estimated miner fee in sats
                  est_tx_size:
                    type: integer
                    description: The estimated transaction size
                  inputsToSign:
                    type: array
                    items:
                      type: string
                      description: The inputs to sign
                  changeAddress:
                    type: string
                    description: The change address
                  fee:
                    type: integer
                    description: The estimated miner fee in sats
                  change:
                    type: integer
                    description: The change value
        "400":
          description: Bad request error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"


  /api/v2/olga/mint:
    post:
      operationId: mintOlgaStamp
      tags:
        - Minting
      summary: Mint an OLGA STAMP.
      description: |
        This returns a hex encoded serialized PSBT transaction ready for signing and broadcasting
        via wallet or library. There is no validation that the input data provided
        will conform to all STAMP specifications. It is the users sole responsibility 
        The examples provided are for demonstration purposes only.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MintStampInputData"
            examples:
              mint:
                value:
                  sourceWallet: "bc1ql49ydapnjafl5t2cp9zqpjwe6pdgmxy98859v2"
                  qty: 1
                  locked: true
                  filename: test.png
                  file: "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAAG1BMVEUAAAALOzcKBiAJTzz/1lqZoxgIaSyfQuJmIslgvM+QAAAAAXRSTlMAQObYZgAAAMlJREFUeNp9kNVhAzEMQFVtYE+ge8HfxhsUFkjuFih4gPJ3Jz9mMPuJJVvjzkR0CBJf7CFQB05GKs75EVCwEbAa+3Wg9XmZ5rOz7gljoE9ZmSydzT67lqcdaWrhUCo8m8baKDEt7Qqz4wtVKTVHRI8R2N1bW7wqMb4GLya0KQOYVOUrXfIaHKWY1lsCTfKXyih0msQXeA1td/RoHGOk++8figPKo67o+dqappTnx8FakD2Vxf11QA78F+cZ6cC5BCrd0F+T8UDmIwdjIhoVAu1hnQAAAABJRU5ErkJggg=="
                  satsPerKB: 20
                  service_fee: null
                  service_fee_address: null
      responses:
        "200":
          description: Successful response with the psbt transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  hex:
                    type: string
                    description: The hex string of the psbt transaction
                  cpid:
                    type: string
                    description: The asset name
                  base64:
                    type: string
                    description: The base64 string of the psbt transaction
                  est_tx_size:
                    type: integer
                    description: The estimated transaction size
                  input_value:
                    type: integer
                    description: The total input value
                  total_dust_value:
                    type: integer
                    description: The total dust value
                  est_miner_fee:
                    type: integer
                    description: The estimated miner fee
                  change_value:
                    type: integer
                    description: The change value
        "400":
          description: Bad request error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"


components:
  examples:
    DeployExample:
      summary: Example deploy request
      value:
        toAddress: "bc1ql49ydapnjafl5t2cp9zqpjwe6pdgmxy98859v2"
        changeAddress: "bc1ql49ydapnjafl5t2cp9zqpjwe6pdgmxy98859v2"
        op: "deploy"
        tick: "APIV2"
        feeRate: 12
        max: "2100000000"
        lim: "100000"
        dec: 18

    MintExample:
      summary: Example mint request
      value:
        toAddress: "bc1ql49ydapnjafl5t2cp9zqpjwe6pdgmxy98859v2"
        changeAddress: "bc1ql49ydapnjafl5t2cp9zqpjwe6pdgmxy98859v2"
        op: "mint"
        tick: "DOGE"
        feeRate: 150
        amt: "1000"

    TransferExample:
      summary: Example transfer request
      value:
        fromAddress: "bc1qdnksce7dgfsehtdxgz6fzdj2k6qfvmyf8uc2vv"
        toAddress: "bc1qazcm763858nkj2dj986etajv6wquslv8uxwczt"
        changeAddress: "bc1qdnksce7dgfsehtdxgz6fzdj2k6qfvmyf8uc2vv"
        op: "transfer"
        tick: "STAMP"
        feeRate: 150
        amt: "100000"

  schemas:
    Pagination:
      type: object
      properties:
        page:
          type: number
        limit:
          type: number
        totalPages:
          type: number
        total:
          type: number
    SUBPROTOCOLS:
      type: string
      enum:
        - STAMP
        - SRC-20
        - SRC-721
    BlockRow:
      type: object
      properties:
        block_index:
          type: number
        block_hash:
          type: string
        block_time:
          oneOf:
            - type: number
            - type: string
              format: date-time
        previous_block_hash:
          type: string
        ledger_hash:
          type: string
        txlist_hash:
          type: string
        messages_hash:
          type: string
        tx_count:
          type: number
    SendsRow:
      type: object
      properties:
        from:
          type: string
    DispenseRow:
      type: object
      properties:
        tx_hash:
          type: string
        block_index:
          type: integer
        cpid:
          type: string
        source:
          type: string
        destination:
          type: string
        dispenser_tx_hash:
          type: string
        dispense_quantity:
          type: integer
    DispenserRow:
      type: object
      properties:
        tx_hash:
          type: string
        block_index:
          type: number
        source:
          type: string
        cpid:
          type: string
        give_quantity:
          type: number
        give_remaining:
          type: number
        escrow_quantity:
          type: number
        satoshirate:
          type: number
        btcrate:
          type: number
        origin:
          type: string
        dispenses:
          type: array
          items:
            $ref: "#/components/schemas/DispenseRow"
      required:
        - tx_hash
        - block_index
        - source
        - cpid
        - give_quantity
        - give_remaining
        - escrow_quantity
        - satoshirate
        - btcrate
        - origin
    StampRow:
      type: object
      properties:
        stamp:
          oneOf:
            - type: number
        block_index:
          type: number
        cpid:
          type: string
        creator:
          type: string
        divisible:
          type: number
        keyburn:
          oneOf:
            - type: number
        locked:
          type: number
        stamp_base64:
          type: string
        stamp_mimetype:
          type: string
        stamp_url:
          type: string
        supply:
          oneOf:
            - type: number
            - type: string
          nullable: true
        tx_hash:
          type: string
        ident:
          $ref: "#/components/schemas/SUBPROTOCOLS"
        creator_name:
          oneOf:
            - type: string
        stamp_hash:
          type: string
        file_hash:
          type: string
    SendRow:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        cpid:
          oneOf:
            - type: string

        tick:
          oneOf:
            - type: string

        memo:
          type: string
        quantity:
          type: string
          format: int64
        tx_hash:
          type: string
        block_index:
          type: number
    HolderRow:
      type: object
      properties:
        address:
          type: string
        quantity:
          type: number
        divisible:
          type: number
    BlockInfo:
      type: object
      properties:
        block_info:
          $ref: "#/components/schemas/BlockRow"
    BtcInfo:
      type: object
      properties:
        address:
          type: string
        balance:
          type: number
        txCount:
          type: number
        unconfirmedBalance:
          type: number
        unconfirmedTxCount:
          type: number
        btcPrice:
          type: number
        usdValue:
          type: number
    XCPParams:
      type: object
      properties:
        filters:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              op:
                type: string
              value:
                type: string
        address:
          type: string
        asset:
          type: string
    SRC20Balance:
      type: object
      properties:
        address:
          type: string
        p:
          type: string
        tick:
          type: string
        amt:
          type: number
        block_time:
          type: string
          format: date-time
        last_update:
          type: number
          description: "The block index of the last update to the balance"
        deploy_tx:
          type: string
          description: "the tx_hash of the deploy transaction"
        deploy_img:
          type: string
          description: "The image associated with the deploy token"
    Src20SnapShotDetail:
      type: object
      properties:
        tick:
          type: string
        address:
          type: string
        balance:
          type: string
    Src20Detail:
      type: object
      properties:
        tx_hash:
          type: string
        block_index:
          type: number
        p:
          type: string
        op:
          type: string
        tick:
          type: string
        creator:
          type: string
        amt:
          oneOf:
            - type: number
        deci:
          type: number
        lim:
          type: string
        max:
          type: string
        destination:
          type: string
        block_time:
          type: string
        creator_name:
          oneOf:
            - type: string
        destination_name:
          type: string
    Src20SnapshotDetail:
      type: object
      properties:
        tick:
          type: string
        address:
          type: string
        balance:
          oneOf:
            - type: number
            - type: string
    SRC101Balance:
      type: object
      properties:
        address:
          type: string
        p:
          type: string
        deploy_hash:
          type: string
        tokenid:
          type: string
        tokenid_utf8:
          type: string
        expire_timestamp:
          type: number
        last_update:
          type: number
        address_btc:
          type: string
        address_eth:
          type: string
        txt_data:
          type: string
        img:
          type: string
    Src101Detail:
      type: object
      properties:
        tx_hash:
          type: string
        block_index:
          type: number
        p:
          type: string
        op:
          type: string
        tick:
          oneOf:
            - type: string
        tick_hash:
          oneOf:
            - type: string
        name:
          oneOf:
            - type: string
        tokenid:
          oneOf:
            - type: string
        tokenid_utf8:
          oneOf:
            - type: string
        description:
          oneOf:
            - type: string
        wla:
          oneOf:
            - type: string
        imglp:
          oneOf:
            - type: string
        imgf:
          oneOf:
            - type: string
        deploy_hash:
          oneOf:
            - type: string
        creator:
          oneOf:
            - type: string
        pri:
          oneOf:
            - type: number
        dua:
          oneOf:
            - type: number
        lim:
          oneOf:
            - type: number
        mintstart:
          oneOf:
            - type: number
        mintend:
          oneOf:
            - type: number
        owner:
          oneOf:
            - type: string
        toaddress:
          oneOf:
            - type: string
        destination:
          type: string
        block_time:
          type: string
    StampBalance:
      type: object
      properties:
        cpid:
          type: string
        stamp:
          type: number
        stamp_base64:
          type: string
        stamp_url:
          type: string
        stamp_mimetype:
          type: string
        tx_hash:
          type: string
        divisible:
          type: number
        supply:
          oneOf:
            - type: number
            - type: string
        locked:
          oneOf:
            - type: number
            - type: boolean
        creator:
          type: string
        creator_name:
          oneOf:
            - type: string
        balance:
          oneOf:
            - type: number
            - type: string
    MintStatus:
      type: object
      properties:
        max_supply:
          type: string
        total_minted:
          type: string
        total_mints:
          type: number
        progress:
          type: string
        decimals:
          type: number
        limit:
          oneOf:
            - type: number
    SRC20TrxRequestParams:
      type: object
      properties:
        block_index:
          type: integer
          format: int32
          nullable: true
          description: The index of the block.
        tick:
          type: string
          nullable: true
          description: The tick value, possibly represented as an emoji.
        op:
          type: string
          nullable: true
          description: The operation type, if applicable.
        limit:
          type: integer
          format: int32
          default: 1000
          description: The maximum number of items to return.
        page:
          type: integer
          format: int32
          default: 1
          description: The page number for pagination.
        sort:
          type: string
          default: "ASC"
          description: The sorting order, ASC or DESC.
        tx_hash:
          type: string
          nullable: true
          description: The transaction hash, if filtering by transaction.
        address:
          type: string
          nullable: true
          description: The address involved in the transactions.

    PaginationQueryParams:
      type: object
      properties:
        limit:
          type: number
        page:
          type: number
    PaginatedRequest:
      type: object
      properties:
        query:
          $ref: "#/components/schemas/PaginationQueryParams"

    PaginatedStampResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            data:
              type: array
              items:
                $ref: "#/components/schemas/StampRow"
    PaginatedStampBalanceResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            data:
              type: array
              items:
                $ref: "#/components/schemas/StampBalance"
    PaginatedSrc20ResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            data:
              type: array
              items:
                $ref: "#/components/schemas/Src20Detail"

    TotalSrc101ResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          type: number

    TokenidSrc101ResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          type: string

    PaginatedSrc101ResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            data:
              type: array
              items:
                $ref: "#/components/schemas/Src101Detail"
    PaginatedTickResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            mint_status:
              $ref: "#/components/schemas/MintStatus"
            data:
              type: array
              items:
                $ref: "#/components/schemas/Src20Detail"
    TickResponseBody:
      type: object
      properties:
        last_block:
          type: number
        mint_status:
          $ref: "#/components/schemas/MintStatus"
        data:
          $ref: "#/components/schemas/Src20Detail"
    Src20ResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          $ref: "#/components/schemas/Src20Detail"
    Src20SnapshotResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            snapshot_block:
              type: number
            data:
              $ref: "#/components/schemas/Src20SnapshotDetail"
    StampsAndSrc20:
      type: object
      properties:
        stamps:
          type: array
          items:
            $ref: "#/components/schemas/StampRow"
        src20:
          type: array
          items:
            $ref: "#/components/schemas/SRC20Balance"
    PaginatedSrc20BalanceResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          type: array
          items:
            $ref: "#/components/schemas/SRC20Balance"
    Src20BalanceResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          $ref: "#/components/schemas/SRC20Balance"
    Src101BalanceResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          $ref: "#/components/schemas/SRC101Balance"
    PaginatedSrc101BalanceResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          type: array
          items:
            $ref: "#/components/schemas/SRC101Balance"
    PaginatedBalanceResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            btc:
              $ref: "#/components/schemas/BtcInfo"
            data:
              type: object
              properties:
                stamps:
                  type: array
                  items:
                    $ref: "#/components/schemas/StampRow"
                src20:
                  type: array
                  items:
                    $ref: "#/components/schemas/SRC20Balance"
    StampResponseBody:
      type: object
      properties:
        data:
          type: object
          properties:
            stamp:
              $ref: "#/components/schemas/StampRow"
        last_block:
          type: number
    StampsResponseBody:
      type: object
      properties:
        last_block:
          type: number
        data:
          type: array
          items:
            $ref: "#/components/schemas/StampRow"
    PaginatedIdResponseBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            last_block:
              type: number
            ident:
              oneOf:
                - type: string
            data:
              type: array
              items:
                $ref: "#/components/schemas/StampRow"
    PaginatedDispenserResponseBody:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer
        total:
          type: integer
        last_block:
          type: integer
        dispensers:
          type: array
          items:
            $ref: "#/components/schemas/DispenserRow"
    DispenserResponseBody:
      type: object
      properties:
        dispensers:
          type: array
          items:
            $ref: "#/components/schemas/DispenserRow"
        last_block:
          type: number
    ErrorResponseBody:
      type: object
      properties:
        error:
          type: string
    PaginatedResponseBody:
      oneOf:
        - $ref: "#/components/schemas/PaginatedStampResponseBody"
        - $ref: "#/components/schemas/ErrorResponseBody"
    BlockInfoResponseBody:
      type: object
      properties:
        block_info:
          $ref: "#/components/schemas/BlockRow"
        issuances:
          type: array
          items:
            $ref: "#/components/schemas/StampRow"
        last_block:
          type: number
    StampBlockResponseBody:
      type: object
      properties:
        block_info:
          $ref: "#/components/schemas/BlockRow"
        data:
          type: array
          items:
            $ref: "#/components/schemas/StampRow"
        last_block:
          type: number
    IdHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            id:
              oneOf:
                - type: string
                - type: number
    IdentHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            ident:
              type: string
    BlockHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            block_index:
              oneOf:
                - type: number
                - type: string
    AddressHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            address:
              type: string
    TickHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            tick:
              oneOf:
                - type: string
                - type: number
    BlockTickHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            block_index:
              oneOf:
                - type: number
                - type: string
            tick:
              oneOf:
                - type: string
                - type: number
    AddressTickHandlerContext:
      type: object
      properties:
        params:
          type: object
          properties:
            address:
              type: string
            tick:
              oneOf:
                - type: string
                - type: number
    TX:
      type: object
      properties:
        hex:
          type: string
    TXError:
      type: object
      properties:
        error:
          type: string
    SRC20DeployData:
      type: object
      required:
        - toAddress
        - changeAddress
        - op
        - tick
        - feeRate
        - max
        - lim
        - dec
      properties:
        toAddress:
          type: string
        changeAddress:
          type: string
        op:
          type: string
          enum: ['deploy']
        tick:
          type: string
        feeRate:
          type: number
        max:
          type: string
        lim:
          type: string
        dec:
          type: number

    SRC20MintData:
      type: object
      required:
        - toAddress
        - changeAddress
        - op
        - tick
        - feeRate
        - amt
      properties:
        toAddress:
          type: string
        changeAddress:
          type: string
        op:
          type: string
          enum: ['mint']
        tick:
          type: string
        feeRate:
          type: number
        amt:
          type: string

    SRC20TransferData:
      type: object
      required:
        - fromAddress
        - toAddress
        - changeAddress
        - op
        - tick
        - feeRate
        - amt
      properties:
        fromAddress:
          type: string
        toAddress:
          type: string
        changeAddress:
          type: string
        op:
          type: string
          enum: ['transfer']
        tick:
          type: string
        feeRate:
          type: number
        amt:
          type: string

    SRC20BaseData:
      type: object
      required:
        - toAddress
        - changeAddress
        - op
        - tick
        - feeRate
      properties:
        toAddress:
          type: string
        changeAddress:
          type: string
        op:
          type: string
          enum: ['deploy', 'mint', 'transfer']
        tick:
          type: string
        feeRate:
          type: number

    SRC20InputData:
      type: object
      discriminator:
        propertyName: op
        mapping:
          deploy: '#/components/schemas/SRC20DeployData'
          mint: '#/components/schemas/SRC20MintData'
      oneOf:
        - $ref: '#/components/schemas/SRC20DeployData'
        - $ref: '#/components/schemas/SRC20MintData'
      required:
        - toAddress
        - changeAddress
        - op
        - tick
        - feeRate

    SRC20TransferInputData:
      oneOf:
        - $ref: '#/components/schemas/SRC20TransferData'
      discriminator:
        propertyName: op
        mapping:
          transfer: '#/components/schemas/SRC20TransferData'

    MintStampInputData:
      type: object
      properties:
        sourceWallet:
          type: string
        assetName:
          type: string
          nullable: true
        qty:
          type: number
        locked:
          type: boolean
        divisible:
          type: boolean
          default: false
        filename:
          type: string
        file:
          type: string
        satsPerKB:
          type: number
        service_fee:
          type: number
          nullable: true
        service_fee_address:
          type: string
          nullable: true
      required:
        - sourceWallet
        - qty
        - file
        - satsPerKB
    PaginatedCollectionResponseBody:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer
        total:
          type: integer
        last_block:
          type: integer
        data:
          type: array
          items:
            $ref: "#/components/schemas/Collection"

    Collection:
      type: object
      properties:
        collection_id:
          type: string
        collection_name:
          type: string
        creators:
          type: array
          items:
            type: string
        stamps:
          type: array
          items:
            $ref: "#/components/schemas/StampRow"
    APIDocs:
      type: object
      properties:
        version:
          type: string
        endpoints:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              description:
                type: string

    SRC20CreateRequest:
      type: object
      oneOf:
        - $ref: '#/components/schemas/SRC20InputData'
        - $ref: '#/components/schemas/SRC20TransferInputData'
      discriminator:
        propertyName: op
        mapping:
          deploy: '#/components/schemas/SRC20InputData'
          mint: '#/components/schemas/SRC20InputData'
          transfer: '#/components/schemas/SRC20TransferInputData'
