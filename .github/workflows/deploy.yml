name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      CSRF_SECRET_KEY: "12323"  # Placeholder key

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository
      pull-requests: write # Needed for reviewdog to comment on PRs

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Validate OpenAPI Schema
        run: npm run validate:ci

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.1.1

      - name: Build step
        run: deno task build

      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set timeout for each reviewdog process
          timeout_duration=60

          # Run fmt and lint checks separately
          echo "Running deno fmt check..."
          deno fmt --check . 2>&1 | ./scripts/transform-deno-output.sh fmt > fmt.json
          echo "Running deno lint check..."
          deno lint --json . 2>&1 | ./scripts/transform-deno-output.sh lint > lint.json
          
          # Function to run reviewdog with timeout
          run_reviewdog() {
            local file=$1
            local name=$2
            if [ -s "$file" ]; then
              echo "Processing $name results..."
              timeout $timeout_duration bash -c "cat $file | reviewdog -f=rdjson -name=$name -reporter=github-pr-review" || \
              echo "Warning: $name check timed out but comments may have been posted"
            else
              echo "No $name issues found"
            fi
          }
          
          # Process results with timeouts
          run_reviewdog fmt.json denofmt
          run_reviewdog lint.json denolint
          
          # Clean up
          rm -f fmt.json lint.json
          exit 0

      # - name: Start Deno app
      #   run: deno run -A main.ts &
      #   env:
      #     PORT: 8000

      # - name: Wait for Deno app to be ready
      #   run: |
      #     echo "Waiting for Deno app to start..."
      #     sleep 10

      # - name: Install Dredd
      #   run: npm install -g dredd

      # - name: Run Dredd tests
      #   run: dredd
      #   env:
      #     DREDD_SERVER: http://localhost:8000
